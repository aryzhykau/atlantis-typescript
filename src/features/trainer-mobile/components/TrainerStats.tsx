import React from 'react';
import {
  Box,
  Typography,
  Paper,
  CircularProgress,
  useTheme,
} from '@mui/material';
import {
  TrendingUp,
  People,
  Schedule,
  Star,
} from '@mui/icons-material';
import { useGetTrainerPaymentsQuery, useGetTrainerTrainingsRangeQuery } from '../api/trainerApi';
import { useAuth } from '../../../hooks/useAuth';
import { skipToken } from '@reduxjs/toolkit/query/react';
import { useGetCurrentUserQuery } from '../../../store/apis/userApi';
import { StatsGrid } from './StatsGrid';
import { useGradients } from '../hooks/useGradients';
import dayjs from 'dayjs';

export const TrainerStats: React.FC = () => {
  const theme = useTheme();
  const gradients = useGradients();

  // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (—Ç—Ä–µ–Ω–µ—Ä–∞)
  const { data: user, isLoading: isLoadingUser } = useGetCurrentUserQuery();
  const trainerId = user?.id;

  // –ü–æ–ª—É—á–∞–µ–º –ø–ª–∞—Ç–µ–∂–∏ —Ç—Ä–µ–Ω–µ—Ä–∞ –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–π –º–µ—Å—è—Ü
  const { data: payments, isLoading: isLoadingPayments } = useGetTrainerPaymentsQuery({
    period: 'month',
  });

  // –ü–æ–ª—É—á–∞–µ–º —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ —Ç—Ä–µ–Ω–µ—Ä–∞ –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–π –º–µ—Å—è—Ü
  const { data: trainings, isLoading: isLoadingTrainings } = useGetTrainerTrainingsRangeQuery(
    {
      start_date: dayjs().subtract(1, 'month').format('YYYY-MM-DD'),
      end_date: dayjs().format('YYYY-MM-DD'),
    }
  );

  // –í—ã—á–∏—Å–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
  const totalAmount = payments?.reduce((sum, payment) => sum + payment.amount, 0) || 0;
  const totalPayments = payments?.length || 0;
  const totalTrainings = trainings?.length || 0;
  const averageRating = 4.8; // –ü–æ–∫–∞ –∑–∞–≥–ª—É—à–∫–∞, –ø–æ—Ç–æ–º –¥–æ–±–∞–≤–∏–º —Ä–µ–∞–ª—å–Ω—É—é –ª–æ–≥–∏–∫—É

  // –î–∞–Ω–Ω—ã–µ –¥–ª—è —Å—Ç–∞—Ç–∏—Å—Ç–∏—á–µ—Å–∫–∏—Ö –∫–∞—Ä—Ç–æ—á–µ–∫
  const statsItems = [
    {
      icon: TrendingUp,
      value: `${totalAmount.toFixed(2)} ‚Ç¨`,
      label: '–û–±—â–∏–π –¥–æ—Ö–æ–¥',
      gradient: 'success' as const,
    },
    {
      icon: People,
      value: totalPayments.toString(),
      label: '–ü–ª–∞—Ç–µ–∂–µ–π',
      gradient: 'primary' as const,
    },
    {
      icon: Schedule,
      value: totalTrainings.toString(),
      label: '–¢—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫',
      gradient: 'warning' as const,
    },
    {
      icon: Star,
      value: averageRating.toFixed(1),
      label: '–†–µ–π—Ç–∏–Ω–≥',
      gradient: 'info' as const,
    },
  ];

  if (isLoadingUser || isLoadingPayments || isLoadingTrainings) {
    return (
      <Box sx={{ 
        p: 2, 
        pb: 10, 
        display: 'flex', 
        flexDirection: 'column',
        justifyContent: 'center', 
        alignItems: 'center',
        minHeight: '60vh',
        background: gradients.info,
        borderRadius: 3,
        mx: 1,
      }}>
        <CircularProgress size={60} sx={{ color: 'white', mb: 2 }} />
        <Typography variant="h6" sx={{ color: 'white', fontWeight: 500 }}>
          –ó–∞–≥—Ä—É–∑–∫–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏...
        </Typography>
      </Box>
    );
  }

  return (
    <Box sx={{ 
      p: 2, 
      pb: 10,
      background: theme.palette.background.default, 
      minHeight: '100%',
    }}>
      {/* –ö—Ä–∞—Å–∏–≤—ã–π —Ö–µ–¥–µ—Ä —Å –≥—Ä–∞–¥–∏–µ–Ω—Ç–æ–º */}
      <Paper 
        elevation={0}
        sx={{ 
          mb: 3, 
          p: 3, 
          background: gradients.primary,
          borderRadius: 3,
          color: 'white',
          position: 'relative',
          overflow: 'hidden',
          '&::before': {
            content: '""',
            position: 'absolute',
            top: 0,
            left: 0,
            right: 0,
            bottom: 0,
            background: 'url("data:image/svg+xml,%3Csvg width="60" height="60" viewBox="0 0 60 60" xmlns="http://www.w3.org/2000/svg"%3E%3Cg fill="none" fill-rule="evenodd"%3E%3Cg fill="%23ffffff" fill-opacity="0.1"%3E%3Ccircle cx="30" cy="30" r="2"/%3E%3C/g%3E%3C/g%3E%3C/svg%3E")',
            opacity: 0.3,
          }
        }}
      >
        <Box sx={{ position: 'relative', zIndex: 1 }}>
          <Typography variant="h4" sx={{ fontWeight: 700, mb: 1, display: 'flex', alignItems: 'center' }}>
            üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
            <TrendingUp sx={{ ml: 1, fontSize: 32 }} />
          </Typography>
          <Typography variant="body1" sx={{ opacity: 0.9, fontWeight: 300 }}>
            –í–∞—à–∏ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏ –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–π –º–µ—Å—è—Ü
          </Typography>
        </Box>
      </Paper>

      {/* –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ */}
      <StatsGrid items={statsItems} columns={2} />

      {/* –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
      <Paper 
        elevation={0}
        sx={{ 
          mt: 3, 
          p: 3, 
          borderRadius: 3,
          border: '1px solid',
          borderColor: 'divider',
          background: theme.palette.background.paper,
        }}
      >
        <Typography variant="h6" sx={{ fontWeight: 600, mb: 2, color: theme.palette.text.primary }}>
          –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
        </Typography>
        <Typography variant="body2" color="text.secondary" sx={{ mb: 1 }}>
          ‚Ä¢ –°—Ä–µ–¥–Ω–∏–π –¥–æ—Ö–æ–¥ –∑–∞ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫—É: {totalTrainings > 0 ? (totalAmount / totalTrainings).toFixed(2) : '0'} ‚Ç¨
        </Typography>
        <Typography variant="body2" color="text.secondary" sx={{ mb: 1 }}>
          ‚Ä¢ –ê–∫—Ç–∏–≤–Ω—ã—Ö —Å—Ç—É–¥–µ–Ω—Ç–æ–≤: {payments?.filter((p, index, arr) => 
            arr.findIndex(p2 => p2.client?.id === p.client?.id) === index
          ).length || 0}
        </Typography>
        <Typography variant="body2" color="text.secondary">
          ‚Ä¢ –ü–µ—Ä–∏–æ–¥: {dayjs().subtract(1, 'month').format('DD MMMM')} - {dayjs().format('DD MMMM YYYY')}
        </Typography>
      </Paper>
    </Box>
  );
}; 